@using CkanDotNet.Api.Model
@using CkanDotNet.Web.Models
@using CkanDotNet.Web.Models.Helpers
@using System.Collections.Specialized
@model PackageSearchResultsModel

@{
var routeValues = RouteHelper.RouteFromParameters(Html.ViewContext);
}

@if (Model.Pager.Last > 1)
{
    
<div class="pager">
<ul>

@* Show the previous link*@
@if (Model.Pager.Page > 1)
{
    routeValues["page"] = Model.Pager.Previous;
    <li class="link">@Html.ActionLink("< previous", "Index", "Search", routeValues, null)</li>
}

@* Show the individual pages*@
@{
    int maxPagesToDisplay = SettingsHelper.GetSearchResultsMaxPagesToShowInPager();
    int currentPage = Model.Pager.Page;
    
    int range = maxPagesToDisplay / 2;
    int firstPageToDisplay = Math.Max(1, currentPage - range);
    int lastPageToDisplay = firstPageToDisplay + maxPagesToDisplay - 1;

    if (lastPageToDisplay > Model.Pager.Last)
    {
        lastPageToDisplay = Model.Pager.Last;
        firstPageToDisplay = lastPageToDisplay - maxPagesToDisplay + 1;
    }
}
@for (int i = firstPageToDisplay; i <= lastPageToDisplay; i++)
{
    routeValues["page"] = i;
    if (i == Model.Pager.Page)
    {
        <li class="item"><span>@i</span></li>
    }
    else
    {
            
        <li class="item">@Html.ActionLink(@i.ToString(), "Index", "Search", routeValues, null)</li>
    };
}

@* Show the next link*@
@if (Model.Pager.Page < Model.Pager.Last)
{
    routeValues["page"] = Model.Pager.Next;
    <li class="link">@Html.ActionLink("next >", "Index", "Search", routeValues, null)</li>
}

</ul>
</div>
    
}
